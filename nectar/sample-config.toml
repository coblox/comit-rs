# Nectar Configuration File

# The configuration file must be in TOML format.
# The current config can be printed using `nectar dump-config`.
# A custom location to the config file can be specified using `--config`.

[maker]
# The spread to apply to the mid-market when publish an offer. It's a pyrimiad format, 12.34 = 12.34% spread.
spread = 500

[maker.rate]
strategy = "kraken_mid_market"
# The host to use when fetching the rate for BTC/DAI. If you want to use something other than Kraken, configure it here.
# Be aware that nectar still expects the response format to match the one from Kraken,
# hence you will likely have to write a proxy if you want to use something else here.
kraken_api_host = "https://api.kraken.com"

[maker.btc_dai]
# The maximum quantity of bitcoin to buy in one order, optional field.
# If absent, orders are capped by the available quote balance.
max_buy_quantity = 0.1
# The maximum quantity of bitcoin to sell in one order, optional field.
# If absent, orders are capped by the available base balance.
max_sell_quantity = 0.1

[network]
# The libp2p socket on which nectar listens for COMIT messages.
listen = ["/ip4/0.0.0.0/tcp/9939"]

[data]
# Where the data is stored (database & seed), not to be confused with the config file location.
dir = "/Users/froyer/Library/Application Support/nectar"

[logging]
# Logging level for nectar: error, warn, info, debug or trace.
level = "info"

[bitcoin]
# The Bitcoin network nectar is acting on: mainnet, testnet or regtest
network = "regtest"

[bitcoin.bitcoind]
# The url to the bitcoind json rpc, can include user and password if necessary: `http://user:password@host:port`
node_url = "http://localhost:18443/"

# Strategies used for Bitcoin fee handling.
[bitcoin.fees]
# A static sat/byte value can be specified or you can relay on bitcoind's estimatesmartfee feature.
strategy = "static"
sat_per_vbyte = 12
# Alternatively, bitcoind's estimatesmartfee command can be used.
# strategy = "bitcoind"
# Estimate mode can be optionally selected
# estimate_mode = "conservative"
# A max fee cap is needed to ensure that there is enough funds to proceed with a swap and cover the fees
# max_sat_per_vbyte = 34

[ethereum]
# The Ethereum chain id nectar is acting on
chain_id = 1
# The url to the web3 node, can include an infura key: `https://mainnet.infura.io/v3/YOUR-PROJECT-ID`
node_url = "http://localhost:8545/"

# Strategies used for Ethereum gas price handling.
[ethereum.gas_price]
service = "geth"
url = "http://some.geth.url:8545/"

# Logging service for Sentry, if you specify a URL here certain events will be automatically logged to Sentry.
[sentry]
# The DSN URL as specified by your Sentry project. The DSN tells the  Sentry SDK where to send the events to.
url = "https://public_key@account.ingest.sentry.io/project_id"
